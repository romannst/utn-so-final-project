## 📝 Proyecto Final: Cuestionario Teórico

### **🧩 Opción Múltiple (Elige una)**

**1️⃣ ¿Para qué se utiliza Docker?**

a) Diseñar maquetas de sitios web  
b) Administrar máquinas virtuales  
c) Contenerizar aplicaciones para que se ejecuten de forma consistente en distintos entornos <-------
d) Crear lenguajes de programación

**2️⃣ En un archivo `docker-compose.yml`, ¿qué hace la etiqueta `ports`?**

a) Especifica el sistema operativo  
b) Mapea los puertos del contenedor a los del host <-------  
c) Establece el límite de CPU del contenedor  
d) Define la base de datos a usar

**3️⃣ ¿Qué comando construye e inicia contenedores usando `docker-compose`?**

a) `docker-compose up --build` <-------  
b) `docker run`  
c) `docker ps`  
d) `docker build`

**4️⃣ ¿Cuál de estas afirmaciones es VERDADERA?**

a) Un contenedor Docker siempre necesita una máquina virtual completa para ejecutarse.  
b) Docker Compose puede definir y ejecutar múltiples contenedores juntos. <-------
c) Docker no puede usarse con Node.js.  
d) Las imágenes de Docker solo pueden ejecutarse en Linux.

**5️⃣ ¿Qué ventaja principal ofrece Docker al desarrollar aplicaciones?**

a) Permite ejecutar aplicaciones solo en sistemas Linux
b) Facilita la instalación de sistemas operativos en servidores
c) Garantiza que las aplicaciones funcionen igual en cualquier entorno <-------
d) Obliga a usar siempre la misma versión de Node.js

---

### **💡 Verdadero o Falso**

**1️⃣ Los contenedores Docker comparten el kernel de la máquina host.** VERDADERO

**2️⃣ Solo puedes ejecutar un contenedor a la vez usando Docker.** FALSO

**3️⃣ En un `docker-compose.yml`, la etiqueta `depends_on` asegura que un servicio se inicie antes que otro.** VERDADERO

**4️⃣ Los contenedores creados a partir de la misma imagen siempre tendrán los mismos datos dentro por defecto.** FALSO

**5️⃣ Nginx puede usarse en un contenedor Docker para servir archivos estáticos del frontend y hacer proxy inverso de peticiones a la API.** VERDADERO

---

### **✍️ Respuesta Corta**

**1️⃣ ¿Cuál es la diferencia entre un contenedor y una imagen en Docker?**
    En Docker, un contenedor de Docker es una aplicación o un servicio de software autónomo y ejecutable, mientras que una
    imagen es la plantilla que se carga en el contenedor para ejecutarse, como un conjunto de instrucciones.

**2️⃣ ¿Para qué se utilizan volúmenes en Docker?**
    En Docker, los volúmenes se utilizan para almacenar datos de forma persistente y compartirlos entre contenedores, incluso si
    se eliminan o actualizan los contenedores. Son la forma recomendada de gestionar datos persistentes en Docker, ya que permiten
    que los datos sobrevivan al ciclo de vida de los contenedores.

**3️⃣ ¿Qué hace la instrucción `EXPOSE` en un Dockerfile?**
    La instrucción EXPOSE en un Dockerfile especifica los puertos que escucha el contenedor en tiempo de ejecución.

**4️⃣ Escribe un beneficio de usar Docker en tus proyectos.**
    El principal beneficio de usar Docker en un proyecto es la consistencia entre desarrollo, pruebas y producción. El mismo te permite empaquetar
    una aplicación y sus dependencias en un contenedor, asegurando que se ejecute de la misma manera en diferentes entornos.

**5️⃣ ¿Cuál es el propósito de usar Nginx en tu proyecto Docker?**
    Nginx se utiliza en proyectos Docker para servir archivos estáticos, actuar como proxy inverso y balanceador de carga.